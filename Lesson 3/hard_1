#1) 

  # if false
  #   greeting = "hello world"
  # end

  # greeting

  # Undefined because greeting is local variable

#2)

  # greetings = { a: 'hi' }
  # informal_greeting = greetings[:a]
  # informal_greeting << ' there'

  # puts informal_greeting  #  => "hi there"
  # puts greetings

  # to not modify greetings change informal_greeting << ' there' to infomal_greeting += ' there'

#3)

  #A)
  # def mess_with_vars(one, two, three)
  #   one = two
  #   two = three
  #   three = one
  # end
  
  # one = "one"
  # two = "two"
  # three = "three"
  
  # mess_with_vars(one, two, three)
  
  # puts "one is: #{one}"
  # puts "two is: #{two}"
  # puts "three is: #{three}"

  # puts "one is: one" etc, cannot access scope within method

  #B)
  # def mess_with_vars(one, two, three)
  #   one = "two"
  #   two = "three"
  #   three = "one"
  # end
  
  # one = "one"
  # two = "two"
  # three = "three"
  
  # mess_with_vars(one, two, three)
  
  # puts "one is: #{one}"
  # puts "two is: #{two}"
  # puts "three is: #{three}"

   # puts "one is: one" etc, cannot access scope within method

   #C)
  # def mess_with_vars(one, two, three)
  #   one.gsub!("one","two")
  #   two.gsub!("two","three")
  #   three.gsub!("three","one")
  # end

  # one = "one"
  # two = "two"
  # three = "three"

  # mess_with_vars(one, two, three)

  # puts "one is: #{one}"
  # puts "two is: #{two}"
  # puts "three is: #{three}"

  # puts "one is: two" etc, because .gsub! mutates the variable"

#4)
  def dot_separated_ip_address?(input_string)
    dot_separated_words = input_string.split(".")
    return false unless dot_separated_words.size == 4

    while dot_separated_words.size > 0 do
      word = dot_separated_words.pop
      break unless is_an_ip_number?(word)
    end
    
    true
  end

   